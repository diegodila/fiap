A03-150321

git branch // mostra as branchs 
git flow -> cria uma structure de gereciamento de fonts 
cria a feature como tarefa // 
é um cod especifico (feature) e depois destruo 
no git flow posso criar bugfix/hotfix
quem controla tudo é o git flow

git flow init 
git branch
git flow feature start criacaocronogramachallenge
git branch
git flow feature finish [nome-da-branch]
git flow release start [nome-da-release-r1.01]
git branch 
git flow release finish [nome-da-release] -m 'Release de kickoff do projeto'
git branch 
git tag // mostra a release
git checkout main 
git branch 
git push -u origin main 
git push -u origin develop
git flow bugfix start correcaocronograma 
git branch
git status
git diff read.me
git add . 
git status
gcmsg 'alterações do read.me com complementação de texto'
git status
git flow  bugfix finish correcaocronograma //fecha a bugfix
exit
git pull --all // push tudo

-------------------------------------------------
a01-220321

        // atributo
        private int resultado = 0;
 
        // método somar
        public int somar( int n1, int n2 ){
 
            resultado = n1 + n2;
            return resultado;
        }
 
        // método subtrair
        public int subtrair( int n1, int n2 ){
 
            resultado = n1 - n2;
            return resultado;
        }        
 
        // método multiplicar
        public int multiplicar( int n1, int n2 ){
 
            resultado = n1 * n2;
            return resultado;
        }
 
        // método dividir
        public int dividir( int n1, int n2 ){
 
            resultado = n1 / n2;
            return resultado;
        }


    /**
    * Teste de somar na Calculadora.
    */
   @Test
   public void testeSomar() {
       int nro1 = 5;
       int nro2 = 5;
       Calculadora calc= new Calculadora();
       int resultadoEsperado = 10;
       int resultadoReal= calc.somar(nro1, nro2);
       assertEquals(resultadoEsperado, resultadoReal);
   }

new java project -> QA
src > new > Class > Calculator > sem packages > public
src > new > JUnit test case (class)> New JUnit 4 test > Name: TestSoma

todo metodo JUnit tem que ter o @Test antes de cada método e o import static org.junit.Assert.*;

@Test
   public void testeSomar() {
       int nro1 = 5;
       int nro2 = 5;
       Calculadora calc= new Calculadora();
       int resultadoEsperado = 10;
       int resultadoReal= calc.somar(nro1, nro2);
       assertEquals(resultadoEsperado, resultadoReal);
   }

assertEquals -> mostra o resultado do test
TestSoma (class) > run as > Junit Test > 2 class rodando
fazer um test mudando o metodo somar da calculadora 


criando outro metodo na classe TestSoma > não esquecer o @Test > colocar outro nome no metodo > TestSomar2 

criando outra classe > src > new > JUnit test case (class) > new Junit test case 4 > name: TestSubtrair

@Test
   public void testeSubtrair1() {
       int nro1 = 5;
       int nro2 = 3;
       Calculadora calc= new Calculadora();
       int resultadoEsperado = 2;
       int resultadoReal= calc.subtrair(nro1, nro2);
       assertEquals(resultadoEsperado, resultadoReal);
   }

assertEqualss pode ser usado com qualquer valor de retorno

testSuite é empacotar as classes de testes 
src > other > Junit test suite > Name: PacoteCalculadora > (mostra as JUnits que voce quer colocar no pacote > Select all >
run > pacote > dryll down

--------------------------------------------------------
a02-220321  JUnit + Git 
    
DUAS FORMAS POPULARES DE USAR JUNIT:
    
AULA PASSADA...
    
1o CRIAR UMA CLASSE JUNIT PARA CADA MÉTODO DA CLASSE QUE VOCÊ QUER TESTAR E DENTRO DA JUNIT, CRIAR VÁRIOS MÉTODOS TESTANDO CADA UM, UMA COMBINAÇÃO DE INPUTS/OUTPUTS
    
2o CRIAR JUNIT TEST SUITE E JUNTAR TODAS AS JUNIT TEST CASES PARA UMA MESMA CLASSE DE OBJETOS FONTE
    
NESTA AULA...
    
1o CRIAR UMA JUNIT TEST CASE ÚNICA PARA A CLASSE A SER TESTADA. DENTRO DELA, CRIAR TODOS OS MÉTODOS DE TESTES COM TODAS COMBINAÇÕES DE INPUT/OUTPUT


public class Boasvindas{
   private String menssagem;
   //Construtor de Objeto na Classe
   public Boasvindas(String mens){
      this.menssagem = mens; 
   }
   // Exibição da mensagem
   public String exibirMenssagem(){
      System.out.println(this.menssagem);
      return this.menssagem;
   }   
   // Exibição da parte fixa da mensagem
   public String completarMenssagem(){
        String compmens;
        compmens = "Ola! Seja bem vindo a sua calculadora pessoal";
        System.out.println(compmens);
        return compmens;
   }
}


A04-220321

Cobit
metas e controles

------------------------------------------------------
A06-050421

gestao de desempenho 
inspecionar é o primeiro passo
controle de qualidade
definir indicadores representativos 
depois coletar os dados 
inspeção - anot fontes liberados sem erro, por

 programador.

anotação dos valores inspecionados

sigma é estatistica do desvio padrão 


a reta de cima do sigma é limite sup de tolerancia
a reta de baixo do sigma é o limite inf de tolerancia

controle de qualidade -> 

tomar cuidado com testes e produtividade lá em cima
do limite superior de tolerancia, 

quando a performance individual muda, devemos recalcular o sigma

Passos do controle estatístico de processos, após coletadas as métricas na inspeção:
plotar o grafico 
primeiro:

Calculo média e limites de tolerância e registro novas observações para ver se estão dentro dos limites históricos de performance da equipe:

Caso ocorram desvios, eles precisam ser estudados e caso o comportamento tenha se modificado definitivamente para cima ou para baixo dos limites, deve-se ajustar esses limites de controle:

proximo passo: garantia da qualidade

grafico de espinha de peixe ou graficode chicawa

Com base no gráfico de controle, fazemos análises de causa de desvios para promover a Garantia da qualidade


------------------------------------------------------
A07- CMMI 
CMMI serve para capacitar e ver se voce é um profissional maduro
ele serve para medir os resultados de uma empresa e ver se ela é madura

2 

cmmi é pra começar do basico


nivel 2 reqm é gestao de requisitos - monitorar e controlar o andamento do projeto
tudo que vamos usar app de 3 - gestao da qualidade do produto, medir projetos
criar indicadores de desempenho, adotar SCRUM 

NIVEL 3 
GERENCIAR EQUIPES, sequencializar as atividades, gerenciar os riscos
documentar os processos, explicar scrum passo a passo. quais sao os passos para uma arquitetura
levantamento de requisitos - precisamos documentar os processos - auxilia o treinamento de pessoas
desenvolvimento de requisitos - verificaçao e validaçao - tomada de decisao - tomada decisoes rapidas - mudanças de requisitos 
cmmi diz pra deixar o reteiro para a tomada de decisao -

mps.br (brasileiro)
voce tem finaciamentos faceis, ele é incentivado pelo ministerio de ciencia e tecnologia
voce tem oportunidade de financiar 14 anos

cmmi tem 4 niveis de certificaçao o nivel 1 nao certifica 
no nivel 2 do cmmi é tudo envolvido  a gestao 


------------------------------------------------------
A08 TOGAF

TOGAF 4 processos 
app dados e infra

missao - porque existe
visao - ate onde chegar 
valores - etica 
objetivo - ser lider no futuro 

COmeçamos o TOGAF - Estrutura de trabalho para arquitetar soluções

1a Fase: PRELIMINAR - vamos conhecer o que a empresa faz e quer

missao - Solucionar e inovar em softwares 
visao - fornecer atendimento em excelencia a times ti 
valores - entrega e atendimento, primando planejamento e controle 
objetivos e metas - estar entre as 30 melhores software houses do brasil em 13 anos

Missão: ajudar empresas a desenvolverem seus negócios com sucesso através da tecnologia

Visão: desenvolver soluções próprias de software e em parceira com outras empresas, customizando as soluções para os clientes e provendo suporte técnico.

Valores: excelência técnica, gerenciamento preciso das operações, desempenho elevado na entrega e atendimento

Objetivos: destacar-se entre as 30 maiores empresas de soluções de TI do Brasil

Meta: alcançar esse objetivo em 13 anos

2a Fase: A-Visão de Arquitetura

Propósito: conhecer os departamentos da empresa, seus macroprocessos (assuntos que tratam) e como as soluções de TI atendem hoje o negócio

Em seguida, propor um escopo de novas soluções.

visao de arquitetura TOGAF 
painel de portfolio de ti 

togaf-adm representa o ciclo de vida dos trabalhos de arquitetura
4 pilares, processos, aplicação, dados e infraestrutura

tudo começa na etapa preliminar

visao de arquitetura
primeira coisa é fazer a arquitetura
ciclo da arquitetura, 
a preliminar é uma vez só na vida

primeiro preciso entender o impacto da nova solução 
e penser o que muda a forma de trabalho 
c. detalho a parte funcional(banco de dados, arquitetura de software)
d. dimensiono a Estrutura que eu preciso (calcular a infraestrutura que eu preciso), arquitetura de infra
e. é pacote dos anteriores que é a visão de soluções 
e. pacotes de soluções se tornam entregaveis de scrum
f. plano detalhado do que fazer (tarefas)
g. implementação da governança(testar e validar aquilo que está pronto, prestar contas, e fazer entregas)
h. a cada entrega eu tenho que gerenciar mudanças, garantir treinamento para o sistema
no centro da roda está gestao de requisitos, gravamos tudo nele 
o togaf chama de continum empresarial
estão tudo no repo de gestao de requisitos 
o git é o garantidor do continum empresarial

missao: é um sonho é algo infalivel, qual a grande missao dela 
visão: até onde ela que chegar 
valores: são as condicionantes dos trabalhadores
objetivo: define o quer ela quer alcançar 
meta: quanto voce vai pagar para alcançar aqueles objetivos 

[4/19, 9:18 PM] Renato Jardim Parducci
    
ARQUITETURA DE SOLUÇÕES DE TI COM TOGAF!
    
COmeçamos o TOGAF - Estrutura de trabalho para arquitetar soluções
    
1a Fase: PRELIMINAR - vamos conhecer o que a empresa faz e quer

Missão: ajudar empresas a desenvolverem seus negócios com sucesso através da tecnologia

Visão: desenvolver soluções próprias de software e em parceira com outras empresas, customizando as soluções para os clientes e provendo suporte técnico.
    
Valores: excelência técnica, gerenciamento preciso das operações, desempenho elevado na entrega e atendimento
    
Objetivos: destacar-se entre as 30 maiores empresas de soluções de TI do Brasil
    
Meta: alcançar esse objetivo em 13 anos.
    
2a Fase: A-Visão de Arquitetura
Propósito: conhecer os departamentos da empresa, seus macroprocessos (assuntos que tratam) e como as soluções de TI atendem hoje o negócio.
Em seguida, propor um escopo de novas soluções

visao: tem que dizer exatamente o que voce vai fazer, um pouco mais detalhe do que voce quer fazer 

missao: é imutavel 

togaf
fase a. visao de arquitetura
montar um painel, forma sugerida pelo togaf
2 coluna macroatividades que os processos fazem 
mapear todos os processos das areas, na frente voce coloca todos os sistemas que ela controla

verde significa que aquela area de negocio esta totalmente atendida pelo sistema 
amarela esta mais ou menos 
vermelho não tem sistema
com o sinalizador kanban eu consigo ver as oportunidades que eu posso atacar

1.08 parte do archimate

temos montar uma visão rapida, muito resumida, para diagnotico de situação de tecnologia

Criação do projeto
file> new > empty model > exemplo-3sis
até a necessidade tecnologica
começamos a arquitetura capturando os stakeholders, o que ele quer, onde quer chegar e como medir isso

TOGAF
do lado esquerdo fica os projetos
sempre vou ter todos os projetos do ultimo salvamento do projeto

1 
visao de arquitetura
do lado direito é a palheta
os riscos ou divisoes, são pra dividir cada fase

1
visao de arquitetura(stakeholders)

primeiro quadrado (stakeholders, Presidente da software house) 

2quadrado driver
(significa o que ele quer buscar, diretriz)
conhecer os niveis de satisfação dos clientes com o suporte 

associamos os elementos 
medic conector 
ligamos o presidente e conhecer niveis
assoaciate to with
podemos fazer o diagrama com inteiro com asss simples

3quadrado assesment (para conhecer os niveis)
forma como ele vai conhecer os clientes (como pretende)
(registrar a satisfação dos clientes por avalações)


ligamos o driver com a satisfação dos clientes
assoaciate to with 
associação simples

<**
4precisamos começar a colocar o objetivos e requisistos de desenvolvimento 

parte cinza a interpretação do profissional de ti o que ele precisa fazer. (4quadrado alvo chama go
go são obj que eu preciso alcançar), eu como tecnologia o que eu quero alcançar (registrar as ocorrencias em sistema de informação computacional)

alvo, 5quadrado 
(preciso garantir meio do cliente atribuir uma nota de atendimento) 

então temos 2 obj
precisamos movimentar e solucionar esse chamado

alvo 6 quadrado.
(computar o tempo de atendimento em função das ações realizadas)

todas as 3 coisas para saber a satisfação do cliente

fazemos no magic conector, associamos com o registrar a satisfação dos clientes por avaliações 
no conector, influencia no resultado, usamos o conector de influenciar 
ligamos os 3 quadrados ao registrar a ...


7 quadrado (regra ou alerta chamados(principios))
100% dos chamados precisam estar no sistema
colocamos associados com registrar as ocorrencias em um sistema ... 

8 quadrado (regra)
(O tempo de atendimento é a diferençça entra a data/hora de registro e a data/hora de solução com o ok do cliente)
associamos com o computar o tempo de atendimento em função...

9 quadrado(regra)
(a avaliação é uma opção do cliente)
associamos com o garantir um meio do cliente atribuir...
**>

Continuando a Visão de arquitetura
Lista de requisitos

<***
10 losango 
1(requirement)
(registrar dados basicos de um chamado)
2(constraint)
(dados basicos são: ID do cliente, Cargo do cliente, descrição do problema, Data e hora de registro)

associamos o 1 e o 2 (requisito e regra)
composed of (composto de..)
relação de composição

3(requirement)
(registrar transferencia de chamados entre analistas de suporte)

4(constraint)
(dados na transferencia do chamado:ID do analista origem, ID do analista destino, data e hora)
associamos o 3 e 4 (requisito e regra)
relação de composição

5(requirement)
(registrar solução)
6(constraint)
Registrar descriação da solução e data e hora
composição 

7(requirement)
(registrar avaliação do cliente)
8(constraint)
(Notas somente 2 insatisfeito 2- satisfeito)
associação simples

depois temos que ligar a lista de requisitos com os objetivos fechando a visao de arquitetura 
***>

(registrar dados basicos de um chamado) (associa com)
liga com (registrar as ocorrencias em sistema de informação computacional)

(registrar transferencia de chamados entre analistas de suporte) associa com (computar o tempo de atendimento em função das ações realizadas)

(registrar solução) associa com (computar o tempo de atendimento em função das ações realizadas)

(registrar avaliação do cliente) associa com (preciso garantir meio do cliente atribuir uma nota de atendimento) 

------------------------------------------------------
A09

fase arquitetura (visao da arquitetura)
eu quero construir um visao do que eu preciso atacar 
entendimento do que quer o stakeholders
matriz onde tem os departamento da empresa
coluna com nome dos sistema

archimate permite fazer a arquitetura togaf
visao de arq (visao de escopo)
stakeholders principais interessados (presidente da empresa)

driver (o que ele quer)
lupa(como medir)

3 etapas (quem quer(stakeholders), o que ele quer(conhecer os niveis de satisfação...), como ele quer(registar a satisfação dos clientes...))

em seguida definimos obj para nos de sistemas, o que temos para oferecer para nossos stakeholders

alerta sao coisas que eu não posso esquecer aliados com os obj

depois tentamos identificar os requisitos dos software
focamos sp nos requisitos do atendimento em si
depois dos requisitos associamos uma constraint
registro contem constraint
constraint é uma regra de requisito

fase arquitetura (visao da arquitetura) fase a 
desenhar a arquitetura de negocio (fase b)

palheta referente a modelagem de arch de negocio (processos)

quais atividades do trabalho do teu usuario vao ser atendidas pelo sistema que estamos desenvolvendo

seta na palheta archimate (bussiness process)
estamos modelando o sistema para atender uma area que atende clientes da empresa 

desenhar a arquitetura de negocio (fase b)
<****
1quadro (seta)
(recepcionar chamados de suporte)

2quadro (seta)
(registrar detalhes da ocorrencia)

3quadro (seta)
(diagnotico causa do problema)

4quadro (seta)
(documentar melhor solução de chamado)

5(seta)
(coletar avaliação de satisfação do cliente)

temos que pensar como a cabaça da area de negocio
estamos fazendo um sistemas para ajudar quais atividades 
são as atividades acima

conecto 1 com 2 flows to (flui para )
2 com 3
3 com 4 
4 com 5 respectivamente 

depois colocamos bussiness event

quadro 6(bussiness event)
(cliente necessitando de apoio tecnico)
conecto com 1 (conector trigger)
ele é trigger(desencandeia o fluxo 1,2,3,4...)

fruto do trabalho(produto)
quadro 7(product)
(documentação do chamado)
produzida quando, chamada quando?
vinculamos com o registrar detalhes
conecto com 2 e 3 e 4
usado por (conector used by)

quadro8 em parelo outro produto(product)
(historico de problemas e soluções conhecidas)
used by por documentar solução 
e diagnotico 
conect 3 e 4

quadro9 (product)
(historico das valiações dos clientes)
conect 5 used by

quadro10 (patente, bussiness function)
(atendimento ao cliente dos produtos da empresa)

quadro11 (function)
(uso do sistema da empresa)

conect quadro9 que é uma função composto de (conect composed with)
com 1,2,3,4

conect quadro11 
uso do sistema 
conect agregate com 5
se o usuario quiser avaliar ele não avalia

podemos arrastar pra dentro os quadros 1,2,3,4 para dentro da function quadro10
e podemos colocar os produtos dentro  

ligamo a atividade dos processo com os requisitos do software, precisamos saber se todos os requisitos tem utilidade

ligamos o registrar avaliação com coletar avaliação

(registrar avaliação do cliente) liga coletar avaliacao (realiza conector)

documentação solução de chamado liga registra solução

transferencia de chamado liga com diagnotico de causa
(realiza conector)

diagnotico de causa liga com registrar solução
(realiza conector)

registra detalhes da ocorrencia liga com registrar dados de um chamados
(realiza conector)

com isso vemos que todos os requisitos são atendidos, cobrem os processos da empresa 

posso colocar quem faz as atividades
definir que vai acessar cada tela, quem da conta de cada de processo

bussiness actor (colocamos o cargo da pessoa)
pegamos ele na palheta

cargo
1service desk - 2analista de sistemas - 3dba - 4analista de segurança da informação  - 5analista de redes e telecomunicação 

parte do usuario 
1cliente do produto

eles podem desempenhar mais de um papel
analista de sistema dois papeis

associamos os papeis de ator com os as reponsabilidades deles. 

1service desk assigned to recepcionar chamados de suporte
1service desk assigned to registrar detalhes da ocorrencia
2analista de sistemas desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte
1service desk assigned to recepcionar chamados de suporte


****>
--------------------------------------------------------
No nível de maturidade 0 chamado de incompleto, o trabalho é realizado de forma aleatório, ou seja, neste nível o trabalho pode ou não ser concluído.



Inicial: no primeiro nível, o processo da empresa é caótico, ou seja, ele não possui práticas definidas e as ações ocorrem de maneira improvisada, o que demostra que a organização ainda é imatura. Nessa fase, as chances do não cumprimento de prazos e os custos são maiores, não existe planejamento, é necessário um alto nível de esforço por parte dos envolvidos etc.

<
No nível de maturidade 1 chamado de Inicial, o resultado dos trabalhos realizados é imprevisível e reativo. Neste nível, apesar do trabalho ser concluído, muitas vezes é atrasado e ultrapassa o orçamento.

Nesse primeiro nível, a organização está em um momento crítico, pois não tem processos definidos, e também não consegue realizar planos adequados. É o momento em que tudo acontece de maneira improvisada, e os erros, que costumam ser muitos, são sanados com práticas simplistas, e sem muitos resultados.

Em empresas que ainda se encontram nesse nível, é muito comum que haja atraso nas entregas, gasto excessivo e definição de metas não muito claras para os colaboradores. Portanto, a falta de maturidade da empresa exige grande esforço dos gestores e equipes, pois precisam lidar com problemas sem saber as práticas corretas.

Esta figura exemplifica bem o cenário de uma empresa no nível de maturidade 1. Vemos na figura uma pessoa trabalhando até tarde, com poucos recursos e o dinheiro voando pela janela. Por incrível que pareça é assim que muitas pessoas trabalham hoje em dia, ou seja, de forma totalmente amadora.>

------------------------------------------------------

Gerenciado: nessa etapa existem processos em fase inicial, nesse sentido, a empresa consegue monitorar o escopo, o custo e o prazo dos mesmos. Com essa ação, a organização é capaz de otimizar atividades, políticas, adquirir experiência etc.

<
O nível de maturidade 2 é chamado de Gerenciado. Neste nível, os trabalhos são gerenciados no nível de projeto. Os projetos são planejados, realizados, medidos e controlados.

Empresas que se encontram no segundo nível de maturidade ainda carregam processos iniciais, mas com o diferencial de que controlam com mais facilidade os custos e os prazos dos projetos para entregas de produtos e serviços.

Neste nível, os gestores conseguem definir um planejamento claro e eficaz, a fim de otimizar as práticas e a cultura da empresa. Além disso, as organizações já podem produzir relatórios de melhores práticas e adquirir experiência com a nova forma de gestão.

Esta outra figura exemplifica o cenário de uma empresa no nível de maturidade 2. Vemos aqui uma equipe trabalhando de forma mais colaborativa, com mais recursos do que no nível 1. Porém, podemos perceber que ainda existem algumas dificuldades como podemos ver no gráfico ao fundo que mostra uma queda em um indicador possivelmente de desempenho seguida de uma leve melhora. Além disso, os recursos ainda não são os ideais e as empresas ainda tem muitas perdas e desperdícios que afetam não só a margem de lucro dos projetos, mas também impactam na satisfação do cliente.
>
------------------------------------------------------

Definido: no terceiro nível, os processos já possuem uma melhor definição e proatividade, pois fazem uso de documentações e padronizações. Aqui, os processos não dependem única e exclusivamente do esforço dos colaboradores, pois pertencem a empresa.

<
O nível de maturidade 3 é chamado de Definido e é um nível considerado mais proativo e menos reativo do que os níveis anteriores. Um ponto chave deste nível é a definição de padrões de processo para toda a organização fornecendo orientação, entre os projetos, programas e portfólios.

Empresas no terceiro nível já têm processos bem definidos — daí o nome. Suas documentações são padronizadas e suas práticas são uniformes, ou seja, todos sabem o que deve ser feito em cada etapa do desenvolvimento de um produto ou prestação de um serviço. Nesse momento, os colaboradores são importantes para os processos, mas quem os detém é a empresa, que criou a cultura e os capacitou para trabalhar da melhor forma.>

------------------------------------------------------


Quantitativamente Gerenciado: os dados e métricas dos projetos são mais detalhados, pois a empresa os coleta e analisa para uma melhor assimilação. Através dessa ação, a organização consegue desenvolver metas e objetivos assertivos, melhorar a qualidade do seu produto/serviço, ter mais controle sobre o andamento dos processos etc.

<
O nível de maturidade 4 chamado de Gerenciado Quantitativamente é um nível considerado de alta maturidade. Organizações e projetos de alta maturidade usam análise quantitativa e estatística para determinar, identificar e gerenciar a tendência e dispersão central, para entender e abordar a estabilidade e a capacidade de processo e como essas impactam nos objetivos de obtenção de qualidade e desempenho de processo.

No quarto nível, as organizações têm práticas bem mais detalhadas. Elas coletam dados, métricas e outras informações práticas para analisar o andamento da rotina profissional quantitativamente. Dessa forma, é mais fácil diagnosticar as maiores dores da empresa, evitando erros com mais rapidez e facilidade.

Aqui, o planejamento é mais claro, e as metas são estabelecidas de forma possível e conhecida por todos os envolvidos. Também, o controle sobre os processos ajuda na qualidade da entrega, e a incidência de erros é ainda menor.

Nesta outra figura, vemos membros de uma equipe realizando análise quantitativa e estatística com base em histogramas e gráficos de controle apoiados por recursos computacionais mais sofisticados do que empresas de nível 3 de maturidade. Nesse ambiente de alta maturidade, gerentes e diretores tem a mão dados confiáveis para tomar decisões críticas nos projetos como aumentar a competitividade pela redução de prazos e custos e mantendo a qualidade do produto.>

------------------------------------------------------

Otimizado: no último nível, a empresa, por ter coletado os dados pertinentes dos seus projetos, os analisa, identifica seus pontos de melhoria, aplica ações para resolver eventuais problemas, realiza prevenções, entre outras melhorias contínuas.

<
O Nível de maturidade 5 chamado de Otimização também é um nível de alta maturidade. Organizações de Nível 5 focam em melhoria contínua para alcançar processos flexíveis capazes de responder às oportunidades e mudanças. Além disso, estas organizações buscam estabilizar os seus processos aumentando a previsibilidade de resultados e assim criando um ambiente mais adequado para implantar inovações.

Alcançando esse último nível, a empresa consegue diagnosticar as áreas que devem ser otimizadas e traçar metas para solucionar problemas que possam ocorrer. As práticas deste nível ajudam a economizar tempo, já que tudo foi analisado previamente e os processos são otimizados de forma contínua.

Nesta outra figura, mostramos um ambiente com recursos altamente sofisticados como assistentes inteligentes capazes de ajudar tanto no processamento e análise dos dados quanto na avaliação de oportunidades de inovações para estabilizar o desempenho dos processos tornando-os mais ágeis e flexíveis.

Em um ambiente de alta maturidade é constante a busca para melhorar o desempenho dos processos e qualidade dos produtos entregues. Isto é feito através da análise das perdas e desperdícios e eliminação de atividades que não agregam valor. Como resultado direto, as empresas obtêm ganhos expressivos em produtividade e redução de custos.

No case apresentado neste artigo, mostramos como a ProMove ajudou a empresa Radix a alcançar o Nível 5 do CMMI reduzindo em 50% o número de defeitos encontrados pelo cliente e aumentando em mais de 20% a produtividade.

Vale destacar que os níveis de maturidade do CMMI são continuados, ou seja, têm início no 1 e término no 5. Assim, com base nesse roteiro, é possível que empresas consigam obter mais sucesso em seus projetos, o que gera a conquista de um mercado interno e externo.>

**[1]
Se encontra no nível 2 (Gerenciado) – A empresa consegue monitorar o escopo, o custo e os trabalhos são gerenciados no nível de projeto. Os gestores já levantaram requisitos e regras de negócio a fim de definir um planejamento claro e eficaz. Mesmo em processos iniciais,  controlam com mais facilidade os cumprimentos de contratos e planos a fim de otimizar as práticas e a cultura da empresa. Porém, podemos perceber que ainda existem falta de definições de padronização em ferramentas de codificação, testes e integração de software**

 
Gerenciado: nessa etapa existem processos em fase inicial, nesse sentido, a empresa consegue monitorar o escopo, o custo e o prazo dos mesmos. Com essa ação, a organização é capaz de otimizar atividades, políticas, adquirir experiência etc.

<
O nível de maturidade 2 é chamado de Gerenciado. Neste nível, os trabalhos são gerenciados no nível de projeto. Os projetos são planejados, realizados, medidos e controlados.

Empresas que se encontram no segundo nível de maturidade ainda carregam processos iniciais, mas com o diferencial de que controlam com mais facilidade os custos e os prazos dos projetos para entregas de produtos e serviços.

Neste nível, os gestores conseguem definir um planejamento claro e eficaz, a fim de otimizar as práticas e a cultura da empresa. Além disso, as organizações já podem produzir relatórios de melhores práticas e adquirir experiência com a nova forma de gestão.

Esta outra figura exemplifica o cenário de uma empresa no nível de maturidade 2. Vemos aqui uma equipe trabalhando de forma mais colaborativa, com mais recursos do que no nível 1. Porém, podemos perceber que ainda existem algumas dificuldades como podemos ver no gráfico ao fundo que mostra uma queda em um indicador possivelmente de desempenho seguida de uma leve melhora. Além disso, os recursos ainda não são os ideais e as empresas ainda tem muitas perdas e desperdícios que afetam não só a margem de lucro dos projetos, mas também impactam na satisfação do cliente.
>

Otimização por já ter práticas definidas e difundidas entre os colaboradores para achar causas de problemas e ajustar práticas em função das análises estatísticas sobre processos atualmente praticados. **


**[2]
F do MPS.br. (peso 2) Liste as áreas de processo (práticas) do MPS.br que já estão atendidas e quais serão atendidas pelo uso de GIT-Controle de Versão, ORACLE DATA MODELER-Diagramação de BD e BIZAGI MODELER-Diagramação de Processos (veja onde as práticas que aplicam essas ferramentas se enquadram entre as áreas de processos listadas nos níveis do MPS.br.

Liste as áreas de processo (práticas) do MPS.br que já estão atendidas:**[2]
Pela empresa estão sendo atendidas o ate o nivel gerenciado. Sendo os processos de medição, aquisição, garantia da qualidade, gerencia de configuração, gerencia de requisitos e projetos. 


GIT-Controle de Versão - têm relação com os processos de garantia de qualidade e medição

BIZAGI MODELER - têm relação com os processos de gerencia de requisitos

DATA MODELER -têm relação com os processos de gerencia de configuração e gerencia de requisitos**

Exemplo de resposta esperada: “As ferramentas GIT-Controle de Versão, ORACLE DATA MODELER,
e as atividades de análise e limpeza de dados têm relação com os processos de Verificação e Validação de qualidade dos dados.”

**

------------------------------------------------------
A10
a visao de arquitetura encerra quando temos uma lista inicial ou preliminar de requisitos, e quanto mais estiver completa melhor

visao de arquitetura de negocio 
desenho como serao as atividades da empresa depois que eu implantar meu sistema, como a empresa vai funcionar depois que eu implantar meu sistema, etapas do atendimento
mostrando o processo de trabalho, etapas de atendimento
como se trabalha o atendimento ao cliente, quais sao as etapas do atendimento, recpcao, registro, tratativa para identificar a causa do problema dele, por fim eu analizo o desempenho do meu atendimento (cliente me avaliar)
visao de processo 

proxima fase é a arquitetura de sistema (applicação mais dados) falando como o software vai ser 

applicantion components (palheta)
temos que pensar nos componentes do software
podemos pensar na modelagem orientada as serviços 
o componente x presta determinado serviço

palheta application service
interface de acesso do usuario ao sistema

componente palheta 
frontend em php para registrar 

proximo passo é a arquitetura de tecnologia(quando definimos a parte de infra)

temos que desenhar a infra (pensando do ponto de vista do usuario)

------------------------------------------------------
A11
desenho de soluções e oportunidades
SCRUM

1:02
------------------------------------------------------
A12

Histórias de usuário: Épicos/Features/Backlog itens

Front End de cadastramento de chamado

O analista de suporte precisa documentar e armazenar no sistema de informação os dados referentes a uma ocorrência técnica para qual o cliente demanda atendimento. O registro é fundamental para que se possa proceder o encaminhamento da solução.O registro deve conter: O número do contrato do cliente, o nome da pessoa que entrou em contato, o telefone e o e-mail dessa pessoa.
O analista vai informar o número do contrato do cliente e o sistema deve pesquisar os dados de contato do cliente (nome da pessoa que entrou em contato, o telefone e o e-mail dessa pessoa), se o sistema não trouxer os dados do cliente o atendimento é interrompido porque o contrato não está vigente.
Se o sistema trouxer os dados do cliente, o analista deve informar a descrição do problema que o cliente está percebendo.
O sistema deve gerar sequencialmente e automaticamente um número de protocolo para esta ocorrência e esse número deve ser guardado no sistema junto com os demais dados informados, mais a data e hora do registro.Ao final do processo um número de protocolo será gerado e exibido na tela. O mesmo deve ser encaminhado por e-mail para o cliente.

Back end de recuperação de dados de contrato

Quando um analista de suporte informar um número de contrato no front end do registro de chamada, esse dado será enviado para este back end, então o software deve fazer uma pesquisa na base de dados de cadastros de contrato pelo número do protocolo para encontrar e retornar o nome, e-mail e o telefone de contato do cliente. 

Transação de back end desenvolvida em Java acessando um banco de dados Oracle para pesquisa dos dados de contrato.Se o software encontrar o registro retorna os dados conforme descrição, caso contrário retorna nulo em todos os dados.

Após documentar todos itens de backlog de produto, precisamos apontar o grau de dificuldade para fazer cada um.

Poker scrum card

configure o deck de cartas para Fibonacci
    
Para Épicos, usar 55, 89, 144

Para Feature, usar 13, 21, 34

Para Item de backlog de produto, usar 3, 5, 8

Para tarefas de Sprint, usar 0, 1, 2

Nota menor indica que o item é simples

Nota maior indica que ´é complexo

Nota do meio, indica que a dificuldade é média

EFFORT = VALOR COMBINADO

Depois de pontuados os esforços, devemos fazer o PLANO DE RELEASE

Para fazer isso, defina com a equipe e o PO, quanto tempo dura uma Sprint (todas Sprints terão que manter o mesmo limite de tempo).

------------------------------------------------------
A13
------------------------------------------------------
2A14 040821

estimar o tempo de projeto
quanto tempo voce vai levar para fazer esse projeto?

muitas empresas não confiam no poker planning
elas querem uma estimativa cientifica

estimar o projeto
posso usar predição ou previsao ou projecao

predicao: adivinhar o futuro por sentimento

projeção: definir algo com base em historico passado (por analogia)
projeção é um atalho perigoso 

previsao: definir algo com base em probabilidades
pega o historico de projetos e aplica uma matematica (prob, estatistica)
modelo de previsao de projetos

Estimativa Direta: atribui-se diretamente um valor estimado para
fazer algo. Por exemplo: atribui-se um número de horas de
trabalho para criar uma tabela no banco de dados.
(atribui diretamente um valor para aquele item)

Estimativa Paramétrica: utiliza-se um fator de referência, um
item de avaliação de grau de complexidade, para determinar o
esforço para fazer algo. Por exemplo: define-se o número de
campos de dados que uma tabela de banco de dados vai ter e com
base nessa informação, define-se o tempo para criar a tabela no
banco de dados.
(dou a especificação do que eu quero fazer e o modelo matematico da os prontos)

function point
Vamos estudar como a APF (Análise de Pontos de Função) ou
FPA (Function Point Analysis) 1400 empresas que aplicam function point

Decomposição Funcional
decompor em componentes (backlog de produto(copy paste))
ou pegar a lista de requisitos

RF – Requisitos Funcionais(São computados em pontos de função (itens de desenvolvimento))

RNF – Requisitos Não Funcionais (equipe(senior ou junior))

------------------------------------------------------
2A15 110821
------------------------------------------------------
2A16 180821
precisamos cuidar do gerenciamento de integridade 
praticas d novel 3 do cmmi

integridade referencial, integração ou de rastreabilidade

------------------------------------------------------
2A17 230821
------------------------------------------------------
2A18
------------------------------------------------------
2A19
------------------------------------------------------
2A20
------------------------------------------------------
2A21
------------------------------------------------------
2A22
------------------------------------------------------
2A23
------------------------------------------------------
2A24
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
