A02-080321
chamadas de sistema = lib de functions 


dispositivos fisicos { 
    firmware { 
        SO { 
            chamada de sistemas { 
                {compiladores, text editor, command inter}, 
                    {jogos, declaração do irpf, internet banking}

especificação SUS - Single Unix Specification
firmware
doc POSIX

a00-110321
Conhecer os principais subsistemas de um SO

Descrever os principais subsistemas de um SO

Entender  os  conceitos  envolvidos  no  projeto  de algoritmos para escalonamento da CPU, para gerenciamento de memória, para manipulação de arquivos e para gerenciamento de dispositivos de E/S

Projetar programas com maior qualidade e eficiência quanto à utilização dos recursos de hardware gerenciados pelo SO

o que é um firmware?
Firmware, um conjunto de programas que já vem de fábrica e estão armazenados na Memória ROM. Mas não pense que o Firmware só está presente em computadores. Ele também está em vários equipamentos eletrônicos como, relógios e pulseiras inteligentes, Smartphones, controles remotos, câmeras digitais e entre outros objetos. A função do Firmware é armazenar todas as informações para a inicialização das rotinas, para que assim, o equipamento funcione corretamente.
Para simplificar, o Firmware é o programa que oferece vida ao hardware no qual ele está instalado.

o que é device driver?
o que é POSIX?
o que é SUS?
o que é UNIX?
o que é power-on self-test
boot loader? 
como classificamos a chamadas de sistemas?
como é as cns no Unix e no windows?


A03-150321
command Powershell windows
get-date -format d
get-date -format D
get-date -format t
get-date -format T
get-date -format yyyy/MM/dd
get-help 
cls -> command DOS
get-process // processos em execução 
get-process -name explorer // -name parametro, e o nome no processos

handles -> manipulador 
NPM PM WS -> memoria
NPM -> quantidade de memoria real, não paginada 
PM -> paginada, que já foram executadas, que estão no disco
WS -> conjunto de trabalho
CPU -> quantidade de segundos que o processo consumiu
SI -> idetificação da sessão

get-process |  get-member  | out-host -paging 

get-process -name explorer -module 

$exp = get-process - name explorer // declarando variavel
$exp.modules -> 
$exp.thread  -> 

get-services // obter os servicos em exec (listar)
get-services win*
get-services -displayname *net*
get-services -displayname *video*
get-help get-service 
get-help get-service -detailed 
get-help get-service -full
get-help get-service -examples
get-command -noum service
get-command -commandtype cmdlet 
get-command -verb set 
get-command -commandtype cmdlet set* //todos comandos do tipo cmdlet
ipconfig
ipconfig /all //info completa 
systeminfo // gera info de maquina 
syteminfo > C:\temp\SystemInfo.txt
ipconfig /all >> C:\temp\SystemInfo.txt 
ping localhost 
lastexitcode // ultimo cod de saida 
ping fakehost // perde 
lastexitcode // 1 error 
$exp get-member 
$ping = New-Object -TypeName System.Net.NetworkInformation.Ping 
$ping.Send("localhost")
COM

$objWSH = New-Object -COMObject WScript.SHELL
$objWSH | get-member 
$objWSH.Popup("NOVA MENSAGEM", $null, "Caixa de diálogo")
$ie = New-Object -COMObject InternetExplorer.Application
$ie =
$ie.NAvigate2("http.
get-WMIobject -list win32_net // listar relacionado a rede 

get-WMIobject -list win32_disk* // disco

get-WMIobject -list win32_processor* // processador

get-WMIobject -list win32_video* // video


A04-220321 BIOS

power-on self-test
boot loader
interrupções de bios

bios > bootloader >
modo kernel > todas as tarefas ou todas instruções
interrupções de bios

debug > interagir com algumas partes do hardware 
remover o utilitario do sistema operacional, maquina virtual xp
-R (mostra o conteudo do registradores do processador)
processadores sempre terminam com 86 
80/86 ibm processador 
registradores -> 8 registradores de uso geral

CS:IP -> area de codigo (programa)

DS:SI -> area de dados (programa)
ES:DI
FS, GS

SS:SP -> area de pilha (programa) 

MOV AH,2
INT 1A 
INT 3

G=100

A 200 

MOV AH,0
INT 16 
INT 3

-G=200
------------------------------------------------------
A05-050421

fifo- primeiro a entrar e primeiro a sair 

------------------------------------------------------
APROVA

Conceitos Básicos sobre Sistemas Operacionais
Processos
Arquivos
Chamadas de Sistema
Interpretador de comandos

Chamadas de Sistema
chamada de sistema (system calls) é utilizada em sistemas UNIX
Em outros sistemas, o mesmo conceito é apresentado com diferentes nomes: como serviços de sistema (system services) no OpenVMS e interface de programação de aplicação (API – Application Programming Interface) no Windows
Desta forma, um programa de aplicação desenvolvido utilizando as chamadas de sistema de um determinado sistema operacional não pode ser portado diretamente para outro sistema operacional
ser divididas em cinco categorias principais: controle de processo, gerenciamento de arquivo, gerenciamento de dispositivo, manutenção de informação e comunicações





1) O que é sistema operacional? Qual a sua principal função? Quais são as duas formas de se ver um sistema operacional? 

uma camada de software sobre o hardware para gerenciar todos os componentes do sistema, apresentando-o ao usuário como uma interface simples de entender e de programa
A principal função do sistema operacional é esconder do programador a complexidade do hardware, fornecendo para este um conjunto de instruções mais convenientes para o desenvolvimento de seu trabalho. Máquina virtual: É uma visão de cima para baixo na qual o sistema operacional é visto como uma extensão do hardware que fornece uma interface para as aplicações. Gerente de recursos: É uma visão de baixo para cima na qual o sistema operacional é visto como um controlador dos recursos do sistema.

2) O que são chamadas de sistema? Qual a importância das chamadas de sistema para a segurança do sistema computacional? Como as chamadas de sistema são utilizadas por um programa de aplicação?

as chamadas de sistema podem ser entendidas como uma porta de entrada para o acesso ao núcleo do sistema operacional e aos seus serviços. Sempre que um programa de aplicação necessitar de algum serviço do sistema, é efetuada uma chamada a uma de suas rotinas através de uma chamada de sistema

3) O que é interpretador de comandos?

O interpretador de comandos (shell) pode ser visto como a interface entre o usuário de um terminal e o sistema operacional
interpretador de comandos permite aos usuários uma interação amigável com o sistema

4) O que são instruções privilegiadas e não-privilegiadas? Qual a relação destas instruções com os modos de acesso?

Desta forma, existem instruções que só podem ser executadas pelo sistema operacional ou serem executadas sob sua supervisão. As instruções que são capazes de comprometer a segurança e a integridade do sistema computacional são conhecidas como instruções privilegiadas Para controlar a execução das instruções privilegiadas o processador possui um mecanismo de proteção denominado modos de acesso. Basicamente, existem dois modos de acesso: modo usuário e modo núcleo (modo kernel). Quando o processador está operando no modo usuário, apenas instruções não-privilegiadas podem ser executadas, enquanto no modo núcleo todas as instruções do processador podem ser executadas. Desta forma, para que uma instrução privil

5) O que é o padrão POSIX?

especifica um conjunto de chamadas de sistema de tal forma que um programa de aplicação desenvolvido com base neste padrão possa ser executado em qualquer sistema operacional que suporte o padrão POSIX

6) O que é núcleo do sistema operacional e quais são suas principais funções?

O sistema operacional é formado por um conjunto de rotinas que oferece serviços aos usuários, aos programas de aplicação e ao próprio sistema computacional. Este conjunto de rotinas é denominado núcleo do sistema operacional (kernel).
    • Tratamento de interrupções e exceções.
    • Criação e eliminação de processos e threads.
    • Sincronização e comunicação entre processos e threads.
    • Escalonamento e controle dos processos e threads.
    • Gerência de memória.
    • Gerência do sistema de arquivos.
    • Gerência de dispositivos de entrada e saída (E/S).
    • Suporte a redes locais e distribuídas.
    • Controle da utilização dos recursos do sistema computacional.
    • Funções de auditoria e segurança do sistema computacional.

7) Quais as principais diferenças entre os sistemas operacionais para máquinas de grande porte (mainframes) e para computadores pessoais?
nenhuma


A arquitetura x86 tem 8 registradores de uso geral (registradores de propósito geral
------------------------------------------------------
A08 Thread 

multithread maioria das app sao
editor de texto tem mais de 3 threads (thread de faz interface com teclado),(fluxo de exec fazendo o corretor ortagradio) (formatação do texto) (fluxo pra salvamento de automatico) (teclas de atalho) (interface grafica com users)
thread é um fluxo de exec dev pela ibm 
definição de thread, os programas eram repre por uma unic fluxo de exec 
na app multi thread temos multi flux de exec 

thread princpal tiv criad (usb,timer,porta logica) tambem ficam a disposição de todas threads
processo multithread
quando elas acessam a mesma area elas moram juntam na memoria 

todas a threads estao na mesma regiao de memoria, elas compart do mesmo contx de software

o so protege o espaço de endereçamento de um processo do outro 
area de memoria comum 
comunicação de processos? 
quando trabalho com threads conseguem acessar, escrever e ler, sendo a posição de memoria comum entre os processos 

a thread simplesmente utiliza dos recursos, nao precisam alocar ou retirar 
criar ou destruir uma thread é simples pois nao se preocupamos com recursos 

a maioria dos servidores web tem a uma arquitetura de thread

se uma thread precisar fazer uma op de ent e said ela vai sozinha e as outras continuam trab 
principal beneficio é nao para a app por completo
o so trabalha num outro nivel, antes escalonamento de processos agora de threads


------------------------------------------------------
A09
------------------------------------------------------
A10
------------------------------------------------------
A11
------------------------------------------------------
A12
------------------------------------------------------
A13
------------------------------------------------------
A14
------------------------------------------------------
A15
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------



